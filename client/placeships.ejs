<!DOCTYPE html>
<html>
  <head>
    <!-- Vuetify Documentation -->
    <link
      href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/@mdi/font@4.x/css/materialdesignicons.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css"
      rel="stylesheet"
    />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <!-- CDNJS Vuetify Links -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/vuetify/2.1.12/vuetify.css"
      integrity="sha256-eWzVOWu5XL0CR2w08ovD5qMN3UXliNf9e82W+eZwQ+E="
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/vuetify/2.1.12/vuetify.min.css"
      integrity="sha256-QAvBxOUdSj+MaIojNHfbf9a3HhORmrLlgFqgMiKMEb0="
      crossorigin="anonymous"
    />

    <!-- CDN JQuery-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui"
    />
  </head>

  <body>
    <div id="app">
      <v-app>
        <template>
          <div class="column is-12">
            <div class="columns">
              <div class="column is-6">
                <div class="box">
                  <table-board
                    class="tableboardcss"
                    ref="tableBoard"
                    :orientation="orientation"
                  ></table-board>
                  <fleet-board
                    class="fleetboardcss"
                    ref="fleetBoard"
                    @select="select"
                    :ships="shipsFleet"
                  ></fleet-board>
                </div>
              </div>

              <div class="column is-6">
                <div class="box2">
                  <div class="columns">
                    <div class="column is-4">
                      <div class="control">
                        <label class="radio">
                          <input
                            type="radio"
                            name="orientation"
                            value="V"
                            v-model="orientation"
                          />
                          Vertical
                        </label>
                        <br>
                        <label class="radio">
                          <input
                            type="radio"
                            name="orientation"
                            value="H"
                            v-model="orientation"
                            checked
                          />
                          Horizontal
                        </label>
                      </div>
                    </div>
                    <button class="button"
                      @click="startTheGame"
                       >Save</button>
                      <button id="voltar" class="button">Go back</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </template>
      </v-app>
    </div>

    <!-- Vuetify Documentation -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>

    <!-- CDNJs Vue -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.js"></script>

    <!-- CDNJS Vuetify-->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/vuetify/2.1.12/vuetify.js"
      integrity="sha256-vpGloYTtFYxXd3onBTpMrhcqlz2E9iKL2NB7XfmEluw="
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/vuetify/2.1.12/vuetify.min.js"
      integrity="sha256-0SQFpYrI866B5xJRmXyNLL7GfCH6P6mzqioDhfKky3U="
      crossorigin="anonymous"
    ></script>

    <script>
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      // Component - TableBoardSelect                                                                                //
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      Vue.component("TableBoard", {
        props: {
          lengthTable: { type: Number, default: 10 },
          orientation: { type: String, default: "H" }
        },

        template: ` <div class="tablediv">
                    <table class="table is-bordered is-fullwidth">
                      <thead>
                        <tr>
                          <td v-for="i in lengthTable+1">{{i-1}}</td>
                        </tr>
                      </thead>
                      <tbody>
                        <tr v-for="y in columns">
                          <td class="h">{{y.y + 1}}</td>
                          <td v-for="x in y.rows" :class="isSelected(x.me)" @click="select({x: x.x, y: y.y})"></td>
                        </tr>
                      </tbody>
                    </table>
                  </div>`,

        data() {
          return {
            columns: [
              {
                y: 0,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 1,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 2,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 3,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 4,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 5,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 6,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 7,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 8,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              },
              {
                y: 9,
                rows: [
                  { x: 0, me: false },
                  { x: 1, me: false },
                  { x: 2, me: false },
                  { x: 3, me: false },
                  { x: 4, me: false },
                  { x: 5, me: false },
                  { x: 6, me: false },
                  { x: 7, me: false },
                  { x: 8, me: false },
                  { x: 9, me: false }
                ]
              }
            ],
            ship: {
              id: 0,
              length: 0
            }
          };
        },

        methods: {
          isSelected(field) {
            return field ? "is-dark" : "b";
          },
          setShip(args) {
            this.ship.id = args.id;
            this.ship.length = args.length;
          },
          select(args) {
            if (this.ship.id !== 0) {
              if (this.orientation === "H") {
                if (args.x + this.ship.length > this.lengthTable) {
                  alert("There isn't enough space for this ship here");
                  return;
                }
              } else {
                if (args.y + this.ship.length > this.lengthTable) {
                  alert("There isn't enough space for this ship here");
                  return;
                }
              }
              for (let i = 0; i < this.ship.length; i++) {
                if (this.orientation === "H") {
                  if (
                    this.columns[args.y].rows[args.x + i].me === true &&
                    this.columns[args.y].rows[args.x + i].idShip !==
                      this.ship.id
                  ) {
                    alert("There is already a ship in that area");
                    return;
                  }
                } else {
                  if (
                    this.columns[args.y + i].rows[args.x].me === true &&
                    this.columns[args.y + i].rows[args.x].idShip !==
                      this.ship.id
                  ) {
                    alert("There is already a ship in that area");
                    return;
                  }
                }
              }
              this.columns.map(column => {
                return column.rows.map(row => {
                  row.me = row.idShip === this.ship.id ? false : row.me;
                  row.idShip =
                    row.idShip === this.ship.id ? undefined : row.idShip;
                });
              });
              for (let i = 0; i < this.ship.length; i++) {
                if (this.orientation === "H") {
                  this.columns[args.y].rows[args.x + i].me = true;
                  this.columns[args.y].rows[args.x + i].idShip = this.ship.id;
                } else {
                  this.columns[args.y + i].rows[args.x].me = true;
                  this.columns[args.y + i].rows[args.x].idShip = this.ship.id;
                }
              }
            }
          }
        }
      }),
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // FIM DO COMPONENTE                                                                                           //
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Component - FleetBoard                                                                                      //
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        Vue.component("FleetBoard", {
          props: {
            ships: { type: Array, default: [] }
          },

          template: ` <div class="fleet">
                    <div class=help>
                      <img class="highlight" src="https://i.ibb.co/t2Thkff/navysoldier.png">
                      <div class="balao">
                        Ooh-rah Sir! It's time to choose the alignment of our fleet for this battle. Select our 5 ships one by one and place them strategically on the sea.
                      </div>
                    </div>
                    <div v-for="ship in ships">
                      <img class="image img" :src="imageUrl(ship.src)" @click="select(ship)" :class="selectedClass(ship.id)">
                    </div>
                  </div>`,

          data() {
            return {
              selectedShip: 0
            };
          },

          methods: {
            select(args) {
              this.selectedShip = args.id;
              this.$emit("select", args);
            },
            selectedClass(id) {
              return id === this.selectedShip ? "img-selected" : "";
            },
            imageUrl(img) {
              return "https://i.ibb.co/" + img;
            }
          }
        }),
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // FIM DO COMPONENTE                                                                                           //
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // Instância da VUE APP                                                                                        //
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        new Vue({
          el: "#app",

          vuetify: new Vuetify(),

          data() {
            return {
              idShip: 0,
              shipsFleet: [
                { id: 1, src: "B2kGhJy/ship1.png", length: 1 },
                { id: 2, src: "PC0cnNX/ship2.png", length: 2 },
                { id: 3, src: "GkKMd0Z/ship3.png", length: 3 },
                { id: 4, src: "d7yvrDd/ship4.png", length: 4 },
                { id: 5, src: "wW2n8Mx/ship5.png", length: 5 }
              ],
              orientation: "H",
              ships: []
            };
          },

          methods: {
            select(args) {
              this.idShip = args;
              this.$refs.tableBoard.setShip(args);
            },
            startTheGame() {
              let fleet = [];
              for (let y = 0; y < this.$refs.tableBoard.columns.length; y++) {
                for (
                  let x = 0;
                  x < this.$refs.tableBoard.columns[y].rows.length;
                  x++
                ) {
                  if (this.$refs.tableBoard.columns[y].rows[x].me) {
                    let ship = {
                      x: x,
                      y: y,
                      id: this.$refs.tableBoard.columns[y].rows[x].idShip
                    };
                    fleet.push(ship);
                  }
                }
              }
              save(fleet);
              if (fleet.length === 15) {
                saveParams(fleet);
              } else {
                alert("We must select all of our ships for this battle");
              }
            }
          }
        });
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      // SCRIPTS EXTERNOS AO VUE                                                                                     //
      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      var token = localStorage.getItem("authorization");

      function save(da) {
        console.log(da);
      }

      function saveParams(sad) {
        var email = localStorage.getItem("email");
        socket = io.connect();
        socket.emit("ships", email, sad);
        socket.on("ships", function(data) {
          console.log(data);
          if (data.success == true) {
            window.location = "/chose/" + token.substring(0, 5);
          }
        });
      }

      console.log(token);
      $("#voltar").click(function() {
        window.location = "/chose/" + token.substring(0, 5);
      });
    </script>

    <style scoped>
      html{
        overflow: hidden;
      }
      #app {
        height: 100vh;
        background-image: url(https://i.imgur.com/MM7wYMQ.jpg);
       
      }
      .v-application--wrap {
        height: 100vh;
      }

      .icon-edit {
        font-size: 24px;
        color: #ffa726;
        cursor: pointer;
      }
      .fa-thumbs-o-down {
        font-size: 62px;
        color: #e34120;
      }
      .title {
        font-size: 20px;
      }

      .box {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 50px;
        padding-top: 20px;
        padding-bottom: 10px;
        background-color: rgb(255, 255, 255,0.85);
        border-radius: 8px 8px  0 0;
        width: 60%;
        margin: 2% 0 0 20%;
        padding: 2%;
   
      }

      .box2 {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgb(255, 255, 255,0.85);
        width: 60%;
        border-radius: 0 0 8px 8px  ;
        margin-left: auto;
        margin-right: auto;
        padding-bottom: 1%;
      }

      /*FleetBoard*/

      .help {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px;
        height: 8em;
      }

      .balao {
        margin: 0 auto;
        background: black;
        font-family: "open sans";
        font-size: 0.85em;
        line-height: 1.6em;
        border-radius: 15px;
        width: 300px;
        height: 150px;
        color: #fff;
        padding: 20px;
        position: relative;
        margin-top: 30px;
      }
      .balao:after {
        /*Triangulo*/
        content: "";
        width: 0;
        height: 0;
        position: absolute;
        border-top: 20px solid transparent;
        border-bottom: 20px solid transparent;
        /*Faz seta "apontar para baixo. Definir o valor como 'top' fará ela "apontar para cima" */
        /*Aqui entra a cor da "aba" do balão */
        border-right: 20px solid black;
        top: 20px; /*localização. Experimente alterar para 'bottom'*/
        left: -5%;
      }

      .fleet {
        margin-top: 5px;
        height: 67.5vh;
        width: 65vh;
        overflow: auto;
      }

      .fleetboardcss .img {
        height: 50px;
        opacity: 0.3;
        margin-left: 20px;
      }
      .fleetboardcss .img:hover {
        opacity: 1;
      }
      .fleetboardcss .img-selected {
        /* background-color: #dcdcdc; */
        opacity: 1;
      }

      /*TableBoard*/

      .tablediv {
        height: 67.5vh;
        width: 65vh;
        display: block;
      }

      .tableboardcss .is-dark {
        background: #123;
      }

      .table,
      .is-bordered,
      .is-fullwidth {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        border: 1px solid lightcyan;
        height: 67.5vh;
        width: 65vh;
      }

      .table > thead > tr > td {
        border: 1px solid black;
        background:rgb(65, 103, 226);
        color: white;
        text-align: center;
        vertical-align: middle;
        height: 5vh;
        width: 5vh;
      }

      .table > tbody > tr > td.h {
        border: 1px solid black;
        background:rgb(65, 103, 226);
        color: white;
        text-align: center;
        vertical-align: middle;
        height: 5vh;
        width: 5vh;
      }

      .table > tbody > tr > td.b {
        background-color: lightblue;
        height: 5vh;
        width: 5vh;
      }

      .table > tbody > tr > td.b:hover {
        background: rgb(65, 103, 226);
      }
    
      .iniciar a{
        background: #123;
        transition: all 0.35s cubic-bezier(0.37, 0.26, 0.35, 1);
        border: 4px solid #fff;
        padding: 10px;
        color: white;
        font-family: "Rubik", sans-serif;
        text-transform: uppercase;
        font-weight: 800;
        cursor: pointer;
      }
      .iniciar a:hover, a:active {
        background-color: red;
      }

      .button{
        background: #123;
        transition: all 0.35s cubic-bezier(0.37, 0.26, 0.35, 1);
        border: 4px solid #fff;
        padding: 10px;
        color: white;
        font-family: "Rubik", sans-serif;
        text-transform: uppercase;
        cursor: pointer;
      }

      .button:hover{
        background-color: red;
      }

      .control{
        padding-left: 10%;
      }

      .radio input{
       width: 20px;
      }
    </style>
  </body>
  
</html>
